import{B as e,g as a,s as t,d as s,i as r,c as n,a as o,e as c,H as d,b as l}from"./main-317795c8.js";class u extends e{constructor({callbackSelector:e,cause:t,data:s,extraData:r,sender:n,urls:o}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",o&&["  Gateway URL(s):",...o.map((e=>`    ${a(e)}`))],`  Sender: ${n}`,`  Data: ${s}`,`  Callback selector: ${e}`,`  Extra data: ${r}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class i extends e{constructor({result:e,url:s}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${a(s)}`,`Response: ${t(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class f extends e{constructor({sender:e,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}const p="0x556f1830",b={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function m(e,{blockNumber:a,blockTag:t,data:d,to:l}){const{args:i}=s({data:d,abi:[b]}),[p,m,y,w,g]=i,{ccipRead:k}=e,O=k&&"function"==typeof k?.request?k.request:h;try{if(!r(l,p))throw new f({sender:p,to:l});const s=await O({data:y,sender:p,urls:m}),{data:d}=await n(e,{blockNumber:a,blockTag:t,data:o([w,c([{type:"bytes"},{type:"bytes"}],[s,g])]),to:l});return d}catch(e){throw new u({callbackSelector:w,cause:e,data:d,extraData:g,sender:p,urls:m})}}async function h({data:e,sender:a,urls:s}){let r=new Error("An unknown error occurred.");for(let n=0;n<s.length;n++){const o=s[n],c=o.includes("{data}")?"GET":"POST",u="POST"===c?{data:e,sender:a}:void 0;try{const s=await fetch(o.replace("{sender}",a).replace("{data}",e),{body:JSON.stringify(u),method:c});let n;if(n=s.headers.get("Content-Type")?.startsWith("application/json")?(await s.json()).data:await s.text(),!s.ok){r=new d({body:u,details:n?.error?t(n.error):s.statusText,headers:s.headers,status:s.status,url:o});continue}if(!l(n)){r=new i({result:n,url:o});continue}return n}catch(e){r=new d({body:u,details:e.message,url:o})}}throw r}export{h as ccipRequest,m as offchainLookup,b as offchainLookupAbiItem,p as offchainLookupSignature};
